# Services are long-lived entities in K8s, whereas Pods come and go.

apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: webapp
    # release: "0-5" # multiple labels has an AND relationship in a selector.

  ports:
    - name: http
      port: 80 # another parameter is targertPort, which defines which port to forward to. By default targetPort = port if not specified.
      
      # We can only specify nodePort value when tye type is NodePort. 
      # nodePort has to be greater than 30000 for K8s. This restriction is added to avoid port clashing with ports used internally to K8s
      # In production this port will be replaced by a load balancer.
      # nodePort: 30080 

  # Three possible values for type:
  # ClusterIP: a service of type ClusterIP will only be accessible from internal of the K8s cluster.
  # NodePort: expose a port through the node. 
  # LoadBalancer: a load balancer
  # type: NodePort

  # This provisioned load balancer will evenly distribute the load across pods named webapp.
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue

spec:
  selector:
    app: queue

  ports:
    - name: http
    # For the admin console, exposed to outside of the cluster, through the nodePort
      port: 8161
      # nodePort: 30010
    - name: endpoint
    # This is the port we send/receive messages to/from the queue. It will only be a internal port, not expose to outside of K8S cluster, so no "nodePort" defined
      port: 61616

  # type: NodePort
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
# This will be the name used in the DNS as well as API, so make sure this name matches with the API definitions in the Springboot app.
  name: fleetman-position-tracker

spec:
  selector:
    app: position-tracker

  ports:
    - name: http
      port: 8080

  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway

spec:
  selector:
    app: api-gateway

  ports:
    - name: http
      port: 8080
      # nodePort: 30020

  # type: NodePort
  type: ClusterIP